{"version":3,"sources":["VirusDataTableRow.js","CountryDetails.js","VirusDataTableArea.js","App.js","index.js"],"names":["VirusDataTableRow","rowData","handleOpenModal","onClick","CountryDetails","selectedCountry","selectedPreviousCountry","handleCloseModal","console","log","className","VirusDataTableArea","props","key","country","countryPreviousDayData","r","state","filteredData","find","row","previousDayData","setState","showModal","selectedCountryPreviousDayData","fetchData","date","moment","Date","subtract","address","readRemoteFile","format","complete","results","updateData","handleFilterInputChanged","event","data","filter","e","toLowerCase","includes","target","value","filterString","addStatistics","filteredResults","result","Number","isPreviousDayStatistics","push","forEach","countryName","length","sort","a","b","isOpen","this","contentLabel","onRequestClose","shouldCloseOnOverlayClick","ariaHideApp","placeholder","type","onChange","map","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40bc50d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst VirusDataTableRow = ({rowData, handleOpenModal}) => {\r\n    return (\r\n        <tr onClick={() => handleOpenModal()}>\r\n            <td>\r\n                {rowData[1]}\r\n           </td>\r\n            <td>\r\n                {rowData[3]}\r\n            </td>\r\n            <td>\r\n                {rowData[4]}\r\n            </td>\r\n        </tr>\r\n     );\r\n}\r\n\r\nexport default VirusDataTableRow;","import React from 'react';\r\n\r\nconst CountryDetails = ({selectedCountry, selectedPreviousCountry, handleCloseModal}) => {\r\n    console.log(selectedCountry)\r\n    return (\r\n        <>\r\n            <h1>{selectedCountry[1]}</h1>\r\n            <table className=\"table table-borderless\">\r\n                <tbody>\r\n                <tr>\r\n                        <td>Confirmed:</td>\r\n                        <td>{selectedCountry[3]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Deaths:</td>\r\n                        <td>{selectedCountry[4]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Recovered:</td>\r\n                        <td>{selectedCountry[5]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Newly infected:</td>\r\n                        <td>{+selectedCountry[3] - +selectedPreviousCountry[3]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>New deaths:</td>\r\n                        <td>{+selectedCountry[4] - +selectedPreviousCountry[4]}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <button className=\"btn btn-info\" onClick={() => handleCloseModal()}>Close</button>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default CountryDetails;","import React, { Component } from 'react';\r\nimport { readRemoteFile } from 'react-papaparse'\r\nimport moment from 'moment';\r\nimport VirusDataTableRow from './VirusDataTableRow';\r\nimport { CronJob } from 'cron';\r\nimport Modal from 'react-modal';\r\nimport CountryDetails from './CountryDetails';\r\n\r\nexport class VirusDataTableArea extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            filteredData: [],\r\n            previousDayData: [],\r\n            filterString: '',\r\n            showModal: false,\r\n            selectedCountry: '',\r\n            selectedCountryPreviousDayData: ''\r\n        }\r\n        // new CronJob('00 00 00 * * *', this.fetchData(), null, true, 'America/Los_Angeles');\r\n        this.fetchData();\r\n    }\r\n\r\n    handleOpenModal = key => {\r\n        let country;\r\n        let countryPreviousDayData;\r\n\r\n        let r = this.state.filteredData.find(row => row[1] === key);\r\n        if (r) country = r;\r\n\r\n        r = this.state.previousDayData.find(row => row[1] === key);\r\n        if (r) countryPreviousDayData = r;\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            selectedCountry: country,\r\n            selectedCountryPreviousDayData: countryPreviousDayData\r\n        })\r\n    }\r\n\r\n    handleCloseModal = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            selectedCountry: ''\r\n        })\r\n    }\r\n\r\n    fetchData = () => {\r\n        let date = moment(new Date()).subtract(3, \"days\");\r\n        let address = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\r\n        readRemoteFile(address + moment(date).format(\"MM-DD-YYYY\") + \".csv\", {\r\n            complete: (results) => this.updateData(results, false)\r\n        });\r\n        readRemoteFile(address + moment(date.subtract(1, \"days\")).format(\"MM-DD-YYYY\") + \".csv\", {\r\n            complete: (results) => this.updateData(results, true)\r\n        });\r\n\r\n    }\r\n\r\n    handleFilterInputChanged = event => {\r\n        let filteredData = this.state.data.filter(e => e[3].toLowerCase().includes(event.target.value.toLowerCase()));\r\n        this.setState({\r\n            filterString: event.target.value,\r\n            filteredData: filteredData\r\n        })\r\n    }\r\n\r\n    addStatistics = (filteredResults, result) => {\r\n        filteredResults[3] = filteredResults[3] + Number(result[7]);\r\n        filteredResults[4] = filteredResults[4] + Number(result[8]);\r\n        filteredResults[5] = filteredResults[5] + Number(result[9]);\r\n        return filteredResults;\r\n    }\r\n\r\n    updateData = (results, isPreviousDayStatistics) => {\r\n        let filteredResults = [];\r\n        filteredResults.push([\"\", \"Canada\", \"\", 0, 0, 0, \"\", \"\"]);\r\n        filteredResults.push([\"\", \"US\", \"\", 0, 0, 0, \"\", \"\"]);\r\n        filteredResults.push([\"\", \"China\", \"\", 0, 0, 0, \"\", \"\"]);\r\n        filteredResults.push([\"\", \"Australia\", \"\", 0, 0, 0, \"\", \"\"]);\r\n        results.data.forEach(result => {\r\n            let countryName = result[3];\r\n            if (countryName === \"China\") {\r\n                filteredResults[2] = this.addStatistics(filteredResults[2], result);\r\n            } else if (countryName === \"US\") {\r\n                filteredResults[1] = this.addStatistics(filteredResults[1], result);\r\n            } else if (countryName === \"Canada\") {\r\n                filteredResults[0] = this.addStatistics(filteredResults[0], result);\r\n            } else if (countryName === \"Australia\") {\r\n                filteredResults[3] = this.addStatistics(filteredResults[3], result);\r\n            } else {\r\n                if (result.length !== 1 && countryName !== \"Country/Region\") {\r\n                    filteredResults.push(result);\r\n                }\r\n            }\r\n        });\r\n        filteredResults.sort((a, b) => b[3] - a[3]);\r\n        if (!isPreviousDayStatistics) {\r\n            this.setState({\r\n                data: filteredResults,\r\n                filteredData: filteredResults\r\n            })\r\n        } else {\r\n            this.setState({\r\n                previousDayData: filteredResults\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-3\">COVID19 cases by country</h1>\r\n                <h1 className=\"display-4\">{\"data fetched on \" + moment(new Date()).format(\"MMMM Do YYYY\")}</h1>\r\n\r\n\r\n                <Modal isOpen={this.state.showModal}\r\n                    contentLabel=\"Details\"\r\n                    onRequestClose={() => this.handleCloseModal()}\r\n                    shouldCloseOnOverlayClick={true}\r\n                    ariaHideApp={false}\r\n                    className=\"Modal\">\r\n                    <CountryDetails\r\n                        selectedCountry={this.state.selectedCountry}\r\n                        selectedPreviousCountry={this.state.selectedCountryPreviousDayData}\r\n                        handleCloseModal={() => this.handleCloseModal()}\r\n                    />\r\n                </Modal>\r\n.\r\n                <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search for country name\"\r\n                    type='text'\r\n                    value={this.state.filterString}\r\n                    onChange={e => this.handleFilterInputChanged(e)}\r\n                />\r\n\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>Country</th>\r\n                            <th>Infected</th>\r\n                            <th>Deaths</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.filteredData.map(row => (\r\n                            <VirusDataTableRow key={row} rowData={row} handleOpenModal={() => this.handleOpenModal(row[1])} />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { VirusDataTableArea } from './VirusDataTableArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VirusDataTableArea />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}